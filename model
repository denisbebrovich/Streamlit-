# train_and_save_model_no_posted_by.py
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import joblib

# Укажите путь к вашему CSV-файлу с данными
DATA_FILE = 'train.csv' # Замените на реальное имя вашего файла!

# Пример данных для создания тестового CSV, если у вас его нет
try:
    df = pd.read_csv(DATA_FILE)
except FileNotFoundError:
    print(f"Ошибка: Файл '{DATA_FILE}' не найден. Пожалуйста, создайте его или измените путь.")
    # Создадим временный DataFrame для демонстрации, если файл не найден

print("Загруженные данные:")
print(df.head())

# Определяем колонки
# Теперь все признаки будут числовыми
numerical_features = ['SQUARE_FT', 'READY_TO_MOVE', 'RESALE', 'LONGITUDE', 'LATITUDE']
target_feature = 'TARGET(PRICE_IN_LACS)' # Ваша целевая переменная

# Проверяем, что все необходимые колонки присутствуют
required_cols = numerical_features + [target_feature]
if not all(col in df.columns for col in required_cols):
    print("Ошибка: Не все необходимые колонки найдены в CSV-файле.")
    print(f"Ожидаемые колонки: {required_cols}")
    print(f"Найдено колонки: {df.columns.tolist()}")
    exit() # Прерываем выполнение

# Разделение на признаки (X) и целевую переменную (y)
X = df[numerical_features]
y = df[target_feature]

# Разделение данных для обучения
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Инициализация и обучение модели линейной регрессии
model = LinearRegression()
model.fit(X_train, y_train)

# Сохранение обученной модели в файл
model_filename = 'linear_regression_model_no_posted_by.joblib'
joblib.dump(model, model_filename)

print(f"\nМодель сохранена в '{model_filename}'")
print(f"Для предсказания ожидаются следующие признаки (в этом порядке): {numerical_features}")

# Сохраним также информацию о признаках для Streamlit (порядок важен)
feature_info = {
    'input_features_order': numerical_features
}
joblib.dump(feature_info, 'feature_info_no_posted_by.joblib')
print("Информация о признаках сохранена в 'feature_info_no_posted_by.joblib'")
